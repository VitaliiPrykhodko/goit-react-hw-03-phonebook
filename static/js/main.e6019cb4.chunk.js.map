{"version":3,"sources":["App.module.css","Form/Form.module.css","Form/Form.js","Contacts/ContactListItem.js","Contacts/ContactsList.js","Filter/Filter.js","App.js","index.js","Contacts/ContactsList.module.css","Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleClick","resetState","props","onClick","this","className","styles","form_contact","form_label","onChange","input_contact","type","pattern","title","required","btn_contact","Component","ContactListItem","contacts","handleDeleteContact","map","key","contact_item","contact_btn","ContactList","contact_list","Filter","filter","handleFilter","filter_box","filter_label","input_filter","App","handleAddContact","find","contact","alert","shortid","generate","contactId","prevState","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","normalizeFilter","toLowerCase","foundContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6019cb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1a85D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_contact\":\"Form_form_contact__3jH9v\",\"form_label\":\"Form_form_label__eSR7r\",\"input_contact\":\"Form_input_contact__asbTF\",\"btn_contact\":\"Form_btn_contact__3oyUL\",\"filter_label\":\"Form_filter_label__35Mci\"};","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\"\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { name, number } = this.state;\r\n    this.resetState()\r\n    this.props.onClick(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form_contact}>\r\n        <label className={styles.form_label}>\r\n          Name\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={name}\r\n            className={styles.input_contact}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.form_label}>\r\n          Number\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            className={styles.input_contact}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.btn_contact}\r\n          onClick={this.handleClick}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsList.module.css\"\r\n\r\nconst ContactListItem = ({ contacts, handleDeleteContact }) => {\r\n    return contacts.map(({key,name,number}) => {\r\n       return (\r\n    <li key={key} className={styles.contact_item}>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button className={styles.contact_btn} onClick={() => handleDeleteContact(key)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n   })\r\n  \r\n};\r\n\r\nContactListItem.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.node.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })),\r\n    handleDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport { ContactListItem };\r\n","import PropTypes from \"prop-types\";\r\nimport { ContactListItem } from \"./ContactListItem\"\r\nimport styles from \"./ContactsList.module.css\"\r\n\r\nconst ContactList = ({contacts, handleDeleteContact}) => {\r\n    return (\r\n        <ul className={styles.contact_list}>\r\n                    <ContactListItem\r\n                        contacts={contacts}\r\n                        handleDeleteContact={handleDeleteContact}\r\n                    />\r\n          </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\r\n    handleDeleteContact: PropTypes.func.isRequired\r\n}\r\nexport default ContactList","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\"\r\n\r\nconst Filter= ({filter, handleFilter}) => {\r\n    return (\r\n        <div className={styles.filter_box}>\r\n             <label className={styles.filter_label}>\r\n        Find contacts by name\r\n        <input\r\n          onChange={handleFilter}\r\n          value={filter}\r\n          className={styles.input_filter}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./Form/Form.js\";\r\nimport ContactList from \"./Contacts/ContactsList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport styles from \"./App.module.css\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n   const contacts =  localStorage.getItem('contacts')\r\n    const parseContacts = JSON.parse(contacts)\r\n    if (parseContacts) {\r\n      this.setState({\r\n      contacts: parseContacts\r\n    })\r\n    }\r\n  }\r\n\r\n   componentDidUpdate(prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n\r\n  handleFilter = (e) => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n  };\r\n\r\n  handleAddContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    if (\r\n      contacts.find((contact) => {\r\n        return contact.name === name || contact.number === number;\r\n      })\r\n    )\r\n      return alert(`${name} is already in contacts`);\r\n\r\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\r\n    else {\r\n      this.setState({\r\n        contacts: [\r\n          ...contacts,\r\n          {\r\n            key: shortid.generate(),\r\n            name: name,\r\n            number: number,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDeleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.key !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    const foundContacts = contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1>Phonebook</h1>\r\n        <Form onClick={this.handleAddContact} />\r\n        <h2 className=\"contact_title\">Contacts</h2>\r\n        <Filter filter={filter} handleFilter={this.handleFilter} />\r\n        <ContactList\r\n          contacts={foundContacts}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsList_contact_list__34JKG\",\"contact_item\":\"ContactsList_contact_item__DVSBv\",\"contact_btn\":\"ContactsList_contact_btn__3X5pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__mH3BU\",\"input_filter\":\"Filter_input_filter__2UtBx\"};"],"sourceRoot":""}